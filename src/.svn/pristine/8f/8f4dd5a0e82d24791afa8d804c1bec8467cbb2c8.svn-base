/**
 * Client class for the minigame game. Client sends a request to connect to the game server on port 4000. The client can
 * then interact using I/O with the server
 *
 * @author Connor Wilkes
 * @version 1/3/2018s
 */

package Server;

import Login.User;

import java.io.*;
import java.net.InetAddress;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Client {

    final private int port = 4000;
    private User user;
    private Socket connection;
    private InetAddress destination;
    private InputStream in;
    private OutputStream out;
    private final static Logger errorLogger = Logger.getLogger("errors");

    public Client(User user, InetAddress destination) {
        this.user = user;
        this.destination = destination;
    }

    public User getUser() {
        return user;
    }

    public void connect() {
        try (Socket socket = new Socket(destination, port)) {
            connection = socket;
            in = connection.getInputStream();
            out = connection.getOutputStream();
            ObjectOutputStream objectOut = new ObjectOutputStream(out);
            objectOut.writeObject(this.user);
            out.flush();
            socket.close();
        } catch (IOException ex) {
            errorLogger.log(Level.SEVERE, "Could not connect", ex);
        }
    }

    public String readFromServer() throws IOException {
        if (in == null) {
            System.err.println("No inputstream");
            return " ";
        } else if (connection == null) {
            System.err.println("No connection");
            return " ";
        } else {
            StringBuilder message = new StringBuilder();
            InputStreamReader reader = new InputStreamReader(in, "ASCII");
            for (int c = reader.read(); c != -1; c = reader.read()) {
                message.append((char) c);
            }
            return message.toString();
        }
    }

    public static void main(String[] args) {
        User testUser = new User("a", "b", "c");
        try {
            Client testClient = new Client(testUser, InetAddress.getLocalHost());
            testClient.connect();
        } catch (IOException ex) {

        }

    }


}
